syntax = "proto3";

package dnsblockchain.dnsblockchain.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "dnsblockchain/dnsblockchain/v1/params.proto";
import "gogoproto/gogo.proto";
import "dnsblockchain/dnsblockchain/v1/domain.proto";

option go_package = "dnsblockchain/x/dnsblockchain/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // CreateDomain defines the CreateDomain RPC.
  rpc CreateDomain(MsgCreateDomain) returns (MsgCreateDomainResponse);

  // UpdateDomain defines the UpdateDomain RPC.
  rpc UpdateDomain(MsgUpdateDomain) returns (MsgUpdateDomainResponse);

  // DeleteDomain defines the DeleteDomain RPC.
  rpc DeleteDomain(MsgDeleteDomain) returns (MsgDeleteDomainResponse);

  // TransferDomain defines the TransferDomain RPC.
  rpc TransferDomain(MsgTransferDomain) returns (MsgTransferDomainResponse);

  // HeartbeatDomain defines the HeartbeatDomain RPC.
  rpc HeartbeatDomain(MsgHeartbeatDomain) returns (MsgHeartbeatDomainResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "dnsblockchain/x/dnsblockchain/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.

  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgCreateDomain defines the MsgCreateDomain message.
message MsgCreateDomain {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string name = 2;
  string owner = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"]; // Especificar AddressString
  // string ns = 5; // Reemplazado o complementado por ns_records
  repeated NSRecordWithIP ns_records = 5; // NUEVO
  // expiration se establece por el keeper, no en el mensaje
}

// MsgCreateDomainResponse defines the MsgCreateDomainResponse message.
message MsgCreateDomainResponse {
  uint64 id = 1;
}

// MsgUpdateDomain defines the MsgUpdateDomain message.
message MsgUpdateDomain {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;
  string owner = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"]; // Opcional, solo el creator puede cambiar
  // string ns = 5; // Reemplazado o complementado por ns_records
  repeated NSRecordWithIP ns_records = 4; // NUEVO (el n√∫mero de campo puede necesitar ajuste)
  // Expiration se maneja por HeartbeatDomain
}

// MsgUpdateDomainResponse defines the MsgUpdateDomainResponse message.
message MsgUpdateDomainResponse {}

// MsgDeleteDomain defines the MsgDeleteDomain message.
message MsgDeleteDomain {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;
}

// MsgDeleteDomainResponse defines the MsgDeleteDomainResponse message.
message MsgDeleteDomainResponse {}

// MsgTransferDomain defines the MsgTransferDomain message.
message MsgTransferDomain {
  option (cosmos.msg.v1.signer) = "creator"; // [!code highlight]
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;
  string new_owner = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgTransferDomainResponse defines the MsgTransferDomainResponse message.
message MsgTransferDomainResponse {}

// MsgHeartbeatDomain defines the MsgHeartbeatDomain message.
message MsgHeartbeatDomain {
  option (cosmos.msg.v1.signer) = "creator"; // [!code highlight]
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;
}

// MsgHeartbeatDomainResponse defines the MsgHeartbeatDomainResponse message.
message MsgHeartbeatDomainResponse {}
